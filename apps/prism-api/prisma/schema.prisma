// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name      String
  username  String   @unique
  email     String   @unique
  password  String
  avatar    String   @default("")
  bio       String   @default("")
  Servers  Server[] @relation("Users")
  owner  Server[] @relation("Owner")
  channelMessages ChannelMessage[]
  sentFriendRequests Friend[] @relation("sentRequests")
  receivedFriendRequests Friend[] @relation("receivedRequests")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Friend {
  id String @id @default(uuid())
  senderId String
  receiverId String
  status FriendStatus @default(PENDING)
  createdAt DateTime @default(now())

  sender User @relation("sentRequests", fields: [senderId], references: [id])
  receiver User @relation("receivedRequests", fields: [receiverId], references: [id])

  @@unique([senderId, receiverId])
}

model Server {
  id String @id @default(uuid())
  name String 
  description String
  users User @relation("Users",fields: [userId], references: [id])
  userId String
  owner User @relation("Owner",fields: [ownerId], references: [id])
  ownerId String
  channels Channel[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Channel {
  id String @id @default(uuid())
  name String
  description String
  server Server @relation(fields: [serverId], references: [id])
  serverId String
  channelMessages ChannelMessage[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChannelMessage {
  id String @id @default(uuid())
  message String
  user User @relation(fields: [userId], references: [id])
  userId String
  channel Channel @relation(fields: [channelId], references: [id])
  channelId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum FriendStatus {
  ACCEPTED
  PENDING
  DECLINED
}